name: Android Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: macos-latest

    env:
      BUILD_ARTIFACTS: ${{ github.workspace }}/build
      MODULE_NAME: androidApp
      BUILD_VARIANT: release
      JAVA_OPTS: "-Xms512m -Xmx2g -XX:MaxMetaspaceSize=512m"
      GRADLE_OPTS: "-Xms512m -Xmx2g -Dorg.gradle.daemon=false"

    steps:
      # Checkout the code from GitHub repository (Node.js 20 compatible)
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Java JDK (Node.js 20 compatible)
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      # Install Gradle dependencies
      - name: Install dependencies
        run: ./gradlew dependencies

      # Clean and build APK using Gradle with ProGuard/R8 enabled
      - name: Build APK
        run: ./gradlew clean $MODULE_NAME:assemble$BUILD_VARIANT -PenableProguard=true

      # List APK files for debugging
      - name: List APK files
        run: ls -R ${{ github.workspace }}/$MODULE_NAME/build/outputs/apk/$BUILD_VARIANT

      # Copy APK files to build artifacts directory
      - name: Copy APK to artifacts
        run: |
          mkdir -p $BUILD_ARTIFACTS
          cp -r ${{ github.workspace }}/$MODULE_NAME/build/outputs/apk/$BUILD_VARIANT/*.apk $BUILD_ARTIFACTS/

      # Copy Mapping files to build artifacts directory (if ProGuard is enabled)
      - name: Copy Mapping files to artifacts
        run: |
          mkdir -p $BUILD_ARTIFACTS/mapping
          if [ -f ${{ github.workspace }}/$MODULE_NAME/build/outputs/mapping/$BUILD_VARIANT/mapping.txt ]; then
            cp ${{ github.workspace }}/$MODULE_NAME/build/outputs/mapping/$BUILD_VARIANT/mapping.txt $BUILD_ARTIFACTS/mapping/
          else
            echo "No mapping file found. Skipping..."
          fi

      # Upload APK as GitHub Actions artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: $BUILD_ARTIFACTS/*.apk

      # Upload Mapping as GitHub Actions artifact (if ProGuard is enabled)
      - name: Upload Mapping
        uses: actions/upload-artifact@v4
        with:
          name: android-mapping
          path: $BUILD_ARTIFACTS/mapping/mapping.txt
